library(knitr)       # Para generar el notebook
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
# Load libraries for EDA
library(tidyverse)   # Paquete para manipulación y visualización de datos
library(data.table)  # Para manejo eficiente de datos grandes
library(ggplot2)     # Visualización de datos
library(dplyr)       # Manipulación de datos
library(tm)          # Text Mining
library(wordcloud)   # Nube de palabras
library(knitr)       # Para generar el notebook
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
df <- read_csv("../data/IMDB Dataset.csv",)
library(readr)
```{r loading data}
df <- read_csv("../data/IMDB Dataset.csv",)
str(df)
summary(df)
str(df)
summary(df)
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
## Exploration of the structure and descriptive statistics
We can use `str`
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
---
title: "Exploratory Data Analysis (EDA) Sentiment Analysis"
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
library(ggplot2)
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue") +
ggtitle("Sentiment distribution")
library(ggplot2)
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue") +
ggtitle("Sentiment distribution") +
ylab("")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
library(ggplot2)
ggplot(df, aes(x = sentiment, fill = sentiment)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +  # Agregar el conteo
ggtitle("Distribución de Sentimientos") +
ylab("Conteo") +
xlab("Sentimiento") +
scale_fill_manual(values = c("positivo" = "green", "negativo" = "red", "neutro" = "gray")) +  # Personalizar colores
theme_minimal() +  # Aplicar un tema minimalista
theme(legend.position = "none")  # Quitar la leyenda si no es necesaria
library(ggplot2)
ggplot(df, aes(x = sentiment, fill = sentiment)) +
geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)), vjust = -0.5) +  # Updated syntax
ggtitle("Distribución de Sentimientos") +
ylab("Conteo") +
xlab("Sentimiento") +
scale_fill_manual(values = c("positivo" = "green", "negativo" = "red", "neutro" = "gray"),
labels = c("Positivo", "Negativo", "Neutro")) +  # Added labels
theme_minimal() +
theme(legend.position = "none")
library(ggplot2)
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue") +
ggtitle("Sentiment distribution") +
ylab("")
library(ggplot2)
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue", color = "black") +
geom_text(stat='count', aes(label=..count..), vjust=-0.5) +
ggtitle("Sentiment Distribution") +
xlab("Sentiment") +
ylab("Count") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue", color = "black") +
geom_text(stat='count', aes(label=..count..), vjust=-0.5) +
ggtitle("Sentiment Distribution") +
xlab("Sentiment") +
ylab("") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue", color = "black") +
geom_text(stat='count', aes(label=..count..), vjust=-1.5) +
ggtitle("Sentiment Distribution") +
xlab("Sentiment") +
ylab("") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue", color = "black") +
geom_text(stat='count', aes(label=..count..), vjust=1.5) +
ggtitle("Sentiment Distribution") +
xlab("Sentiment") +
ylab("") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue", color = "black") +
geom_text(stat='count', aes(label=..count..), vjust=0.5) +
ggtitle("Sentiment Distribution") +
xlab("Sentiment") +
ylab("") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue", color = "black") +
geom_text(stat='count', aes(label=..count..), vjust=1) +
ggtitle("Sentiment Distribution") +
xlab("Sentiment") +
ylab("") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ggplot(df, aes(x = sentiment)) +
geom_bar(fill = "skyblue", color = "black") +
geom_text(stat='count', aes(label=..count..), vjust=2) +
ggtitle("Sentiment Distribution") +
xlab("Sentiment") +
ylab("") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
library(dplyr)
df <- df %>%
mutate(review_length = nchar(review))
ggplot(df, aes(x = review_length)) +
geom_histogram(binwidth = 10, fill = "steelblue") +
ggtitle("Distribución de Longitud de Reseñas")
library(dplyr)
df <- df %>%
mutate(review_length = nchar(review))
ggplot(df, aes(x = review_length)) +
geom_histogram(binwidth = 10, fill = "steelblue") +
ggtitle("Lenght Distribution of reviews") +
xlab("Lenght of the reviews") +
ylab("") +
library(dplyr)
df <- df %>%
mutate(review_length = nchar(review))
ggplot(df, aes(x = review_length)) +
geom_histogram(binwidth = 10, fill = "steelblue") +
ggtitle("Lenght Distribution of reviews") +
xlab("Lenght of the reviews") +
ylab("")
library(dplyr)
df <- df %>%
mutate(review_length = nchar(review))
ggplot(df, aes(x = review_length)) +
geom_histogram(binwidth = 10, fill = "steelblue") +
geom_text(stat='count', aes(label=..count..), vjust=2) +
ggtitle("Lenght Distribution of reviews") +
xlab("Lenght of the reviews") +
ylab("")
library(dplyr)
df <- df %>%
mutate(review_length = nchar(review))
ggplot(df, aes(x = review_length)) +
geom_histogram(binwidth = 10, fill = "steelblue") +
ggtitle("Lenght Distribution of reviews") +
xlab("Lenght of the reviews") +
ylab("") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
library(tm)
library(wordcloud)
# Crear un Corpus
corpus <- Corpus(VectorSource(df$review))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
# Generar la Nube de Palabras
wordcloud(corpus, max.words = 100, random.order = FALSE, colors = brewer.pal(8, "Dark2"))
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
library(tm)
library(wordcloud)
# Crear un Corpus
corpus <- Corpus(VectorSource(df$review))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
# Generar la Nube de Palabras
wordcloud(corpus, max.words = 100, random.order = FALSE, colors = brewer.pal(8, "Dark2"))
library(tm)
library(wordcloud)
library(RColorBrewer)
# Crear un Corpus
corpus <- Corpus(VectorSource(df$review))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
# Generar la Nube de Palabras
set.seed(1234) # Para reproducibilidad
wordcloud(corpus,
max.words = 100,
random.order = FALSE,
colors = brewer.pal(8, "Paired"),
scale = c(3, 0.5),
rot.per = 0.35,
use.r.layout = FALSE)
# Añadir título y fondo claro
title("Word Cloud of Sentiments", col.main = "blue", font.main = 4)
# Mostrar leyenda (opcional)
legend("topright", legend = "Most frequent words", col = "blue", cex = 0.8, text.col = "blue")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
library(tm)
library(wordcloud)
library(RColorBrewer)
# Crear un Corpus
corpus <- Corpus(VectorSource(df$review))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
# Generar la Nube de Palabras
set.seed(1234) # Para reproducibilidad
wordcloud(corpus,
max.words = 100,
random.order = FALSE,
colors = brewer.pal(8, "Paired"),
scale = c(3, 0.5),
rot.per = 0.35,
use.r.layout = FALSE)
# Añadir título y fondo claro
title("Word Cloud of Sentiments", col.main = "black", font.main = 4)
# Mostrar leyenda (opcional)
legend("topright", legend = "Most frequent words", col = "blue", cex = 0.8, text.col = "blue")
library(tm)
library(wordcloud)
library(RColorBrewer)
# Crear un Corpus
corpus <- Corpus(VectorSource(df$review))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
# Generar la Nube de Palabras
set.seed(1234) # Para reproducibilidad
wordcloud(corpus,
max.words = 100,
random.order = FALSE,
colors = brewer.pal(8, "Paired"),
scale = c(3, 0.5),
rot.per = 0.35,
use.r.layout = FALSE)
# Añadir título y fondo claro
title("Word Cloud of Sentiments", col.main = "black", font.main = 4)
# Mostrar leyenda (opcional)
# legend("topright", legend = "Most frequent words", col = "blue", cex = 0.8, text.col = "blue")
library(tm)
library(wordcloud)
library(RColorBrewer)
# Crear un Corpus
corpus <- Corpus(VectorSource(df$review))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
# Generar la Nube de Palabras
set.seed(1234) # Para reproducibilidad
wordcloud(corpus,
max.words = 100,
random.order = FALSE,
colors = brewer.pal(8, "Paired"),
scale = c(3, 0.5),
rot.per = 0.35,
use.r.layout = FALSE)
# Añadir título y fondo claro
title("Word Cloud of Sentiments", col.main = "black", font.main = 4)
# Mostrar leyenda (opcional)
# legend("topright", legend = "Most frequent words", col = "blue", cex = 0.8, text.col = "blue")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
t.test(review_length ~ sentiment, data = df)
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
glm_model <- glm(sentiment ~ review_length, data = df, family = "binomial")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
source("~/Documents/Proyectos Data Science/To the portfolio/Sentiment-Analysis/notebooks/01_EDA.Rmd")
# Verificar los valores únicos en sentiment
unique(df$sentiment)
# Convertir sentiment a una variable binaria
df$sentiment_binary <- ifelse(df$sentiment == "positive", 1, 0)
# Crear la columna review_length con la longitud de cada reseña
df$review_length <- nchar(df$review)
# Ajustar el modelo logístico
glm_model <- glm(sentiment_binary ~ review_length, data = df, family = "binomial")
summary(glm_model)
#summary(glm_model)
# Load libraries for EDA
library(tidyverse)   # Paquete para manipulación y visualización de datos
library(data.table)  # Para manejo eficiente de datos grandes
library(ggplot2)     # Visualización de datos
library(dplyr)       # Manipulación de datos
library(tm)          # Text Mining
library(wordcloud)   # Nube de palabras
library(readr)
library(knitr)       # Para generar el notebook
# Install necessary libraries (only first time)
# install.packages(c("tidyverse", "data.table", "ggplot2", "dplyr", "tm", "wordcloud", "knitr", "tm"))
# Load libraries for EDA
library(tidyverse)   # Paquete para manipulación y visualización de datos
library(data.table)  # Para manejo eficiente de datos grandes
library(ggplot2)     # Visualización de datos
library(dplyr)       # Manipulación de datos
library(tm)          # Text Mining
library(wordcloud)   # Nube de palabras
library(readr)
library(knitr)       # Para generar el notebook
# Print version of main libraries
cat("Loaded tidyverse version:", packageVersion("tidyverse"), "\n")
# Load libraries for EDA and text mining
library(tidyverse)   # Data manipulation and visualization
library(data.table)  # Efficient data handling for large datasets
library(ggplot2)     # Data visualization
library(dplyr)       # Data wrangling
library(tm)          # Text mining for NLP tasks
library(wordcloud)   # Word cloud visualization
library(readr)       # Data reading
library(knitr)       # For creating notebooks
# Print version of main libraries
cat("Loaded tidyverse version:", packageVersion("tidyverse"), "\n")
# Print version of main libraries
cat("Loaded tidyverse version:", as.character(packageVersion("tidyverse")), "\n")
cat("Loaded data.table version:", as.character(packageVersion("data.table")), "\n")
cat("Loaded ggplot2 version:", as.character(packageVersion("ggplot2")), "\n")
# Print version of main libraries
cat("Loaded tidyverse version:", as.character(packageVersion("tidyverse")), "\n")
cat("Loaded data.table version:", as.character(packageVersion("data.table")), "\n")
cat("Loaded ggplot2 version:", as.character(packageVersion("ggplot2")), "\n")
# Print version of main libraries
cat("Loaded tidyverse version:", as.character(packageVersion("tidyverse")), "\n")
cat("Loaded data.table version:", as.character(packageVersion("data.table")), "\n")
cat("Loaded ggplot2 version:", as.character(packageVersion("ggplot2")), "\n")
# Print version of main libraries
cat("Loaded tidyverse version:", as.character(packageVersion("tidyverse")), "\n")
cat("Loaded data.table version:", as.character(packageVersion("data.table")), "\n")
cat("Loaded ggplot2 version:", as.character(packageVersion("ggplot2")), "\n")
# Display the first few rows of the dataset
head(df)
df <- read_csv("../data/IMDB Dataset.csv",)
# Check summary of the dataset
summary(df)
# Crear una tabla interactiva con DT
datatable(df, options = list(pageLength = 5, columnDefs = list(
list(targets = 0, render = JS(
"function(data, type, row, meta) {",
"return type === 'display' && data.length > 50 ?",
"'<span title=\"' + data + '\">' + data.substr(0, 50) + '...</span>' : data;",
"}"
))
)))
# Load libraries for EDA and text mining
library(tidyverse)   # Data manipulation and visualization
library(data.table)  # Efficient data handling for large datasets
library(ggplot2)     # Data visualization
library(dplyr)       # Data wrangling
library(tm)          # Text mining for NLP tasks
library(wordcloud)   # Word cloud visualization
library(readr)       # Data reading
library(knitr)       # For creating notebooks
library(DT)
install.packages("DT")
# Load libraries for EDA and text mining
library(tidyverse)   # Data manipulation and visualization
library(data.table)  # Efficient data handling for large datasets
library(ggplot2)     # Data visualization
library(dplyr)       # Data wrangling
library(tm)          # Text mining for NLP tasks
library(wordcloud)   # Word cloud visualization
library(readr)       # Data reading
library(knitr)       # For creating notebooks
library(DT)
# Crear una tabla interactiva con DT
datatable(df, options = list(pageLength = 5, columnDefs = list(
list(targets = 0, render = JS(
"function(data, type, row, meta) {",
"return type === 'display' && data.length > 50 ?",
"'<span title=\"' + data + '\">' + data.substr(0, 50) + '...</span>' : data;",
"}"
))
)))
clear
cls
# Install necessary libraries (only first time)
# install.packages(c("tidyverse", "data.table", "ggplot2", "dplyr", "tm", "wordcloud", "knitr", "tm"))
install.packages("swirl")
library(swirl)
ls()
rm(list = ls())
swirl()
5 + 7
clear
clear()
cls
swirl()
swirl()
install.packages("skimr")
summary(iris)
library(skimr)
skim(iris)
skim(iris) %>% is_skim_df()
skim(iris) %>%
dplyr::filter(skim_variable == "Petal.Length")
iris %>%
dplyr::group_by(Species) %>%
skim()
skim(Orange)
iris %>%
dplyr::group_by(Species) %>%
skim()
library(shiny)
runExample("01_hello")
boxx("Hello there!")
list_border_styles()
boxx(
label,
header = "",
footer = "",
border_style = "single",
padding = 1,
margin = 0,
float = c("left", "center", "right"),
col = NULL,
background_col = NULL,
border_col = col,
align = c("left", "center", "right"),
width = console_width()
)
library(reticulate)
use_python()
reticulate::repl_python()
python
reticulate::repl_python()
reticulate::repl_python()
In this section, we will prepare our working environment by installing and loading the necessary libraries. Proper setup is essential for efficient data handling, visualization, and analysis in R. This step ensures that all the tools and libraries we need are readily available for our exploration and modeling tasks.
# Install necessary libraries (only first time)
# install.packages(c("tidyverse", "data.table", "ggplot2", "dplyr", "tm", "wordcloud", "knitr", "tm"))
```
library(data.table)  # Efficient data handling for large datasets
# Print version of main libraries
cat("Loaded tidyverse version:", as.character(packageVersion("tidyverse")), "\n")
cat("Loaded data.table version:", as.character(packageVersion("data.table")), "\n")
cat("Loaded ggplot2 version:", as.character(packageVersion("ggplot2")), "\n")
---
title: "Exploratory Data Analysis (EDA) Sentiment Analysis"
demo()
demo(colors)
clear()
View(showCols1)
setwd("~/Documents/My_Work/My work Software/Proyectos Data Science/To the portfolio/Sentiment-Analysis")
git status
git
